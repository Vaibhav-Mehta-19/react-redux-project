{"version":3,"sources":["Card.js","Cardlist.js","Search.js","Scroll.js","constants.js","App.js","Actions.js","reportWebVitals.js","Reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardarr","map","user","i","Search","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","CHANGE_SEARCH_FIELD","App","state","fetch","then","response","json","users","setState","this","searchField","onSearchChange","filterrob","filter","robot","toLowerCase","includes","length","Cardlist","Component","connect","dispatch","event","text","target","value","payload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","Object","assign","ReactDOM","render","document","getElementById"],"mappings":"8MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,6BAAKF,IACL,4BAAIC,WCMGK,EAXA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACXC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAEnB,OACC,8BACCH,KCIYI,EAXA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACC,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCACjBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDGI,EAPA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAY,SAAUC,OAAO,kBAAoBC,OAAO,SAArE,SACCJ,EAAMK,YCHIC,EAAsB,sB,OCkB7BC,E,kDACL,aACC,IAAD,8BACC,gBACKC,MAAM,CACXnB,OAAQ,IAHT,E,qDAOA,WAAoB,IAAD,OAClBoB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAU,EAAKC,SAAS,CAACzB,OAAOwB,S,oBAEvC,WACA,MAAuCE,KAAKf,MAArCgB,EAAP,EAAOA,YAAcC,EAArB,EAAqBA,eACfC,EAAaH,KAAKP,MAAMnB,OAAO8B,QAAO,SAAAC,GAC3C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASN,EAAYK,kBAEtD,OAA8B,IAA3BN,KAAKP,MAAMnB,OAAOkC,OAEb,yCAKN,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,8BAAd,2BACA,cAAC,EAAD,CAAQA,UAAU,GAAGU,aAAcsB,IACnC,cAAC,EAAD,UACC,cAACO,EAAD,CAAUnC,OAAQ6B,a,GA9BLO,aAsCHC,eAlDS,SAAAlB,GAEvB,MAAM,CACLQ,YAAaR,EAAMQ,gBAGM,SAACW,GAE3B,MAAO,CACNV,eAAgB,SAACW,GAAD,OAAWD,GCdEE,EDcsBD,EAAME,OAAOC,MCdzB,CACxCnC,KAAMU,EACN0B,QAASH,KAFoB,IAACA,MDuDhBH,CAA6CnB,G,QE5C7C0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCNRO,G,MAAe,CACpBzB,YAAa,KCQR0B,EAAQC,aDLc,WAAkC,IAAjCnC,EAAgC,uDAA1BiC,EAAcG,EAAY,uDAAL,GACvD,OAAOA,EAAOhD,MACb,KAAKU,EACL,OAAOuC,OAAOC,OAAO,GAAItC,EAAO,CAACQ,YAAa4B,EAAOZ,UACrD,QACA,OAAOxB,MCETuC,IAASC,OACR,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,MAECO,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.5f80e0e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({ robots }) => {\r\n\tconst cardarr = robots.map((user,i)=>{\r\n\t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t{cardarr}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Search = ({searchchange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input className='pa3 ba b--green bg-lightest-blue' \r\n\t\ttype='search' \r\n\t\tplaceholder='Search Robots'\r\n\t\tonChange={searchchange}/>\r\n\t\t</div>\r\n\t);\r\n} \r\n\r\nexport default Search;","const Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{overflowY : 'scroll', border:'5px solid black' , height:'600px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Scroll;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import React,{Component} from 'react';\r\nimport Cardlist from './Cardlist';\r\nimport Search from './Search';\r\nimport Scroll from './Scroll';\r\nimport {setSearchField} from './Actions.js'\r\nimport {connect} from 'react-redux'\r\nconst mapStateToProps = state =>\r\n{\r\n\treturn{\r\n\t\tsearchField: state.searchField\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) =>\r\n{\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n\t}\r\n}\r\nclass App extends Component {\r\n\tconstructor()\r\n\t{\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\trobots: []\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(users => {this.setState({robots:users})});\r\n\t}\r\n\trender(){\r\n\tconst {searchField , onSearchChange} = this.props;\r\n\tconst filterrob  = this.state.robots.filter(robot =>{\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t})\r\n\tif(this.state.robots.length===0)\r\n\t{\r\n\t\treturn <h1>Loading</h1>\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='bg-yellow underline f1 bold'> RoboFriends </h1>\r\n\t\t\t\t<Search className='' searchchange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<Cardlist robots={filterrob}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {CHANGE_SEARCH_FIELD} from './constants.js';\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CHANGE_SEARCH_FIELD} from './constants.js';\r\nconst initialState = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialState, action={})=>{\r\n\tswitch(action.type){\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\treturn Object.assign({}, state, {searchField: action.payload});\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {searchRobots} from './Reducers';\n\nconst store = createStore(searchRobots);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<App/>\n\t</Provider>\n, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}